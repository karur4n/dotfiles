[
  {
    "bindings": {
      // Window Navigation (LazyVim: <C-h/j/k/l>)
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-l": "workspace::ActivatePaneRight",

      // Window Resizing (LazyVim: <C-Up/Down/Left/Right>)
      "ctrl-up": [
        "workspace::AdjustPaneSize",
        { "amount": 2, "axis": "vertical" }
      ],
      "ctrl-down": [
        "workspace::AdjustPaneSize",
        { "amount": -2, "axis": "vertical" }
      ],
      "ctrl-left": [
        "workspace::AdjustPaneSize",
        { "amount": -2, "axis": "horizontal" }
      ],
      "ctrl-right": [
        "workspace::AdjustPaneSize",
        { "amount": 2, "axis": "horizontal" }
      ],

      // Buffer Navigation (LazyVim: <S-h>, <S-l>, [b, ]b)
      "shift-h": "pane::ActivatePreviousItem",
      "shift-l": "pane::ActivateNextItem",

      // Save File (LazyVim: <C-s>)
      "ctrl-s": "workspace::Save",

      // File Explorer (LazyVim: <leader>e, <leader>E)
      "space e": "project_panel::ToggleFocus",
      "space shift-e": "project_panel::ToggleFocus",

      // File Finder (LazyVim: <leader><space>, <leader>ff)
      "space space": "file_finder::Toggle",
      "space f f": "file_finder::Toggle",
      "space f shift-f": ["file_finder::Toggle", { "select_query": true }],

      // Grep/Search (LazyVim: <leader>/, <leader>sg)
      "space /": "project_search::Toggle",
      "space s g": "project_search::Toggle",
      "space s shift-g": ["project_search::Toggle", { "select_query": true }],

      // Buffer List (LazyVim: <leader>,)
      "space ,": "tab_switcher::Toggle",
      "space f b": "tab_switcher::Toggle",

      // Recent Files (LazyVim: <leader>fr)
      "space f r": "file_finder::Toggle",

      // Terminal (LazyVim: <leader>ft, <C-/>)
      "space f t": "terminal_panel::ToggleFocus",
      "ctrl-/": "terminal_panel::ToggleFocus",

      // Command Palette (LazyVim: <leader>:)
      "space :": "command_palette::Toggle",
      "space s c": "command_palette::Toggle",

      // Diagnostics Panel (LazyVim: <leader>xx)
      "space x x": "diagnostics::Deploy",

      // Quit All (LazyVim: <leader>qq)
      "space q q": "zed::Quit",

      // Window Splitting (LazyVim: <leader>-, <leader>|)
      "space -": "pane::SplitDown",
      "space |": "pane::SplitRight",

      // Window Management
      "space w d": "pane::CloseActiveItem",
      "space w m": "workspace::ToggleZoom",

      // Tab Navigation (LazyVim: <leader><tab>)
      "space tab tab": "workspace::NewFile",
      "space tab ]": "pane::ActivateNextItem",
      "space tab [": "pane::ActivatePreviousItem",
      "space tab d": "pane::CloseActiveItem",
      "space tab o": "pane::CloseOtherItems",

      // Notifications (LazyVim: <leader>un)
      "space u n": "notification_panel::ToggleFocus",

      // Git (LazyVim: <leader>gg)
      "space g g": ["workspace::SendKeystrokes", "cmd-shift-g"],
      "space g b": "editor::BlameHover",

      // Settings
      "space u c": "theme_selector::Toggle",

      // Help
      "space s h": "command_palette::Toggle",
      "space s k": "zed::OpenKeymapEditor"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      // LSP - Go To (LazyVim: gd, gr, gI, gy, gD)
      "g d": "editor::GoToDefinition",
      "g r": "editor::FindAllReferences",
      "g shift-i": "editor::GoToImplementation",
      "g y": "editor::GoToTypeDefinition",
      "g shift-d": "editor::GoToDeclaration",

      // LSP - Hover & Help (LazyVim: K, gK)
      "shift-k": "editor::Hover",
      "g shift-k": "editor::OpenExcerpts",

      // Diagnostics Navigation (LazyVim: [d, ]d, [e, ]e)
      "[ d": "editor::GoToPreviousDiagnostic",
      "] d": "editor::GoToDiagnostic",
      "[ e": ["editor::GoToPreviousDiagnostic", { "severity": "error" }],
      "] e": ["editor::GoToDiagnostic", { "severity": "error" }],

      // Buffer Navigation (LazyVim: [b, ]b)
      "[ b": "pane::ActivatePreviousItem",
      "] b": "pane::ActivateNextItem",

      // Git Hunks Navigation
      "[ h": "editor::GoToPreviousHunk",
      "] h": "editor::GoToHunk",

      // Quickfix Navigation (LazyVim: [q, ]q)
      "[ q": "editor::GoToPreviousDiagnostic",
      "] q": "editor::GoToDiagnostic",

      // Search Navigation (keep n and N as default)

      // Leader Key Bindings

      // Buffer Management (LazyVim: <leader>bb, <leader>bd, <leader>bo)
      "space b b": "pane::AlternateFile",
      "space `": "pane::AlternateFile",
      "space b d": "pane::CloseActiveItem",
      "space b o": "pane::CloseOtherItems",
      "space b shift-d": ["pane::CloseActiveItem", { "save_intent": "close" }],

      // Code Actions (LazyVim: <leader>ca, <leader>cr, <leader>cf)
      "space c a": "editor::ToggleCodeActions",
      "space c r": "editor::Rename",
      "space c f": "editor::Format",
      "space c d": "editor::Hover",

      // Search & Replace
      "space s r": ["pane::DeploySearch", { "replace_enabled": true }],

      // Line Operations (LazyVim: <A-j>, <A-k>)
      "alt-j": "editor::MoveLineDown",
      "alt-k": "editor::MoveLineUp",

      // Incremental Selection
      "ctrl-space": "editor::SelectLargerSyntaxNode",

      // Comments (LazyVim uses gcc for comment toggle)
      "g c c": "editor::ToggleComments",

      // Format Selection
      "space c shift-f": "editor::FormatSelections",

      // Copy file information
      "space c p": "editor::CopyPermalinkToLine",
      "space c shift-p": "editor::CopyFileLocation",

      // Toggle settings (LazyVim: <leader>u...)
      "space u w": "editor::ToggleSoftWrap",
      "space u h": "editor::ToggleInlayHints",
      "space u l": "editor::ToggleLineNumbers",

      // Folding
      "z a": "editor::ToggleFold",
      "z m": "editor::FoldAll",
      "z r": "editor::UnfoldAll",
      "z c": "editor::Fold",
      "z o": "editor::UnfoldLines"
    }
  },
  {
    "context": "Editor && mode == visual",
    "bindings": {
      // Visual Mode Specific
      "space c a": "editor::ToggleCodeActions",
      "space c f": "editor::FormatSelections",

      // Comments in Visual Mode
      "g c": "editor::ToggleComments",

      // Search for selected text
      "space s w": [
        "project_search::SearchInNew",
        { "deployment": { "replace_enabled": false } }
      ],

      // Line Operations in Visual Mode
      "alt-j": "editor::MoveLineDown",
      "alt-k": "editor::MoveLineUp",

      // Indent/Outdent
      ">": "editor::Indent",
      "<": "editor::Outdent"
    }
  },
  {
    "context": "BufferSearchBar",
    "bindings": {
      "escape": "buffer_search::Dismiss",
      "enter": "buffer_search::FocusEditor"
    }
  },
  {
    "context": "ProjectSearchBar",
    "bindings": {
      "escape": "project_search::ToggleFocus"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      // Project Panel Navigation
      "o": "project_panel::Open",
      "enter": "project_panel::Open",
      "space e": "project_panel::ToggleFocus",
      "a": "project_panel::NewFile",
      "shift-a": "project_panel::NewDirectory",
      "d": "project_panel::Delete",
      "r": "project_panel::Rename",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      "/": ["project_panel::NewSearchInDirectory", { "select_query": true }]
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      // Terminal specific bindings
      "ctrl-/": "terminal_panel::ToggleFocus",
      "space f t": "terminal_panel::ToggleFocus",
      "ctrl-c": ["terminal::SendKeystroke", "ctrl-c"],
      "ctrl-d": ["terminal::SendKeystroke", "ctrl-d"]
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      // Workspace level bindings that don't require an editor
      "space l": "file_finder::Toggle",
      "space shift-l": "command_palette::Toggle",
      "space n": "notification_panel::ToggleFocus",

      // Session Management (LazyVim: <leader>qs, <leader>ql)
      "space q s": "workspace::Save",
      "space q l": "workspace::Open",

      // New File (LazyVim: <leader>fn)
      "space f n": "workspace::NewFile",

      // Settings & UI toggles
      "space u shift-c": "theme_selector::Toggle",
      "space u z": "workspace::ToggleZoom",

      // which-key help equivalent
      "space ?": "zed::OpenKeymapEditor"
    }
  }
]
